object CheckCommand "ssl_cert" {
  command = [ PluginContribDir + "/check_ssl_cert" ]

  arguments = {
    "--noauth" = {
      value = "$ssl_cert_noauth$"
      description = "ignore authority warnings (expiration only)"
    }
    "--altnames" = {
      value = "$ssl_cert_altnames$"
      description = "matches the pattern specified in -n with alternate names too"
    }
    "--clientcert" = {
      value = "$ssl_cert_clientcert$"
      description = "use client certificate to authenticate [path]"
    }
    "--clientpass" = {
      value = "$ssl_cert_clientpass$"
      description = "set passphrase for client certificate."
    }
    "--critical" = {
      value = "$ssl_cert_criticaldays$"
      description = "minimum number of days a certificate has to be valid to issue a critical status"
    }
    "--email" = {
      value = "$ssl_cert_email$"
      description = "pattern to match the email address contained in the certificate"
    }
    "--file" = {
      value = "$ssl_cert_file$"
      description = "local file path (works with -H localhost only)"
    }
    "--ignore-exp" = {
      value = "$ssl_cert_ignore_exp$"
      description = "ignore expiration date"
    }
    "--ignore-sig-alg" = {
      value = "$ssl_cert_ignore_sig_alg$"
      description = "do not check if the certificate was signed with SHA1 or MD5"
    }
    "--ignore-ocsp" = {
      value = "$ssl_cert_ignore_ocsp$"
      description = "do not check revocation with OCSP"
    }
    "--issuer" = {
      value = "$ssl_cert_issuer$"
      description = "pattern to match the issuer of the certificate"
    }
    "--check-ssl-labs" = {
      value = "$ssl_cert_ssl_labs$"
      description = "[grade] SSL Labs assestment"
    }
    "--ignore-ssl-labs-cache" = {
      value = "$ssl_cert_ignore_ssl_labs_cache$"
      description = "Forces a new check by SSL Labs (see -L)"
    }
    "--long-output" = {
      value = "$ssl_cert_long_output$"
      description = "append the specified comma separated (no spaces) list of attributes to the plugin output on additional lines. Valid attributes are: enddate, startdate, subject, issuer, modulus, serial, hash, email, ocsp_uri and fingerprint. 'all' will include all the available attributes."
    }
    "--cn" = {
      value = "$ssl_cert_cn$"
      description = "pattern to match the CN of the certificate"
    }
    "--no_ssl2" = {
      set_if = "$ssl_cert_no_ssl2$"
      description = "disable SSL version 2"
    }
    "--no_ssl3" = {
      set_if = "$ssl_cert_no_ssl3$"
      description = "disable SSL version 3"
    }
    "--no_tls1" = {
      set_if = "$ssl_cert_no_tls1$"
      description = "disable TLS version 1"
    }
    "--no_tls1_1" = {
      set_if = "$ssl_cert_no_tls1_1$"
      description = "disable TLS version 1.1"
    }
    "--no_tls1_2" = {
      set_if = "$ssl_cert_no_tls1_2$"
      description = "disable TLS version 1.2"
    }
    "--host-cn" = {
      value = "$ssl_cert_host_cn$"
      description = "match CN with the host name"
    }
    "--org" = {
      value = "$ssl_cert_org$"
      description = "pattern to match the organization of the certificate"
    }
    "--openssl" = {
      value = "$ssl_cert_opensslpath$"
      description = "path of the openssl binary to be used"
    }
    "--port" = {
      value = "$ssl_cert_port$"
      description = "TCP port"
    }
    "--protocol" = {
      value = "$ssl_cert_protocol$"
      description = "use the specific protocol {http|smtp|pop3|imap|ftp|xmpp|irc} DEFAULT: http"
    }
    "--selfsigned" = {
      set_if = "$ssl_cert_selfsigned$"
      description = "allows self-signed certificates"
    }
    "--serial" = {
      value = "$ssl_cert_serial$"
      description = "pattern to match the serial number"
    }
    "--ssl2" = {
      set_if = "$ssl_cert_ssl2$"
      description = "force SSL version 2"
    }
    "--ssl3" = {
      set_if = "$ssl_cert_ssl3$"
      description = "force SSL version 3"
    }
    "--rootcert" = {
      value = "$ssl_cert_rootcert_path$"
      description = "root certificate or directory to be used for certificate validation"
    }
    "--timeout" = {
      value = "$ssl_cert_timeout$"
      description = "seconds timeout after the specified time defaults to 15 seconds)"
    }
    "--temp" = {
      value = "$ssl_cert_tempdir$"
      description = "directory where to store the temporary files"
    }
    "--tls1" = {
      set_if = "$ssl_cert_tls1$"
      description = "force TLS version 1"
    }
    "--tls1_1" = {
      set_if = "$ssl_cert_tls1_1$"
      description = "force TLS version 1.1"
    }
    "--tls1_2" = {
      set_if = "$ssl_cert_tls1_2$"
      description = "force TLS version 1.2"
    }
    "--warning" = {
      value = "$ssl_cert_warning_days$"
      description = "minimum number of days a certificate has to be valid to issue a warning status"
    }
  }
}
